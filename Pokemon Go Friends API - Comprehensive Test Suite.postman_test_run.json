{
	"id": "6babe9e6-3246-483e-81a6-4bef4f7e471c",
	"name": "Pokemon Go Friends API - Comprehensive Test Suite",
	"timestamp": "2025-07-05T00:14:10.631Z",
	"collection_id": "1782073-a2cd067d-5b3d-4d0d-bb50-c9acd114da2a",
	"folder_id": 0,
	"environment_id": "1782073-a4990fa4-3ce5-4c31-ad88-62d3aac21ff8",
	"totalPass": 292,
	"delay": 0,
	"persist": true,
	"status": "finished",
	"startedAt": "2025-07-05T00:14:08.105Z",
	"totalFail": 25,
	"results": [
		{
			"id": "d3927c07-d7a4-4f69-bafa-88f946cd8af1",
			"name": "Health Check - Basic",
			"url": "http://localhost:8080/api/health",
			"time": 129,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": true,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Health check returns 200 OK": true,
				"Health response is an object": true,
				"Health response contains status": true,
				"Health status is UP when healthy": true,
				"Health response may contain components": true
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 1,
					"fail": 0
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Health check returns 200 OK": {
					"pass": 1,
					"fail": 0
				},
				"Health response is an object": {
					"pass": 1,
					"fail": 0
				},
				"Health response contains status": {
					"pass": 1,
					"fail": 0
				},
				"Health status is UP when healthy": {
					"pass": 1,
					"fail": 0
				},
				"Health response may contain components": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				129
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": true,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Health check returns 200 OK": true,
					"Health response is an object": true,
					"Health response contains status": true,
					"Health status is UP when healthy": true,
					"Health response may contain components": true
				}
			]
		},
		{
			"id": "86b234ff-6333-42da-a7aa-494486d41e69",
			"name": "Readiness Check",
			"url": "http://localhost:8080/api/health/ready",
			"time": 9,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": true,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Readiness check returns 200 OK": true,
				"Readiness response is an object": true,
				"Readiness check indicates application is ready": true
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 1,
					"fail": 0
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Readiness check returns 200 OK": {
					"pass": 1,
					"fail": 0
				},
				"Readiness response is an object": {
					"pass": 1,
					"fail": 0
				},
				"Readiness check indicates application is ready": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": true,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Readiness check returns 200 OK": true,
					"Readiness response is an object": true,
					"Readiness check indicates application is ready": true
				}
			]
		},
		{
			"id": "a47fbf7a-787a-4462-8496-bc0d687f3a54",
			"name": "Liveness Check",
			"url": "http://localhost:8080/api/health/live",
			"time": 8,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": true,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Liveness check returns 200 OK": true,
				"Liveness response is an object": true,
				"Liveness check indicates application is alive": true
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 1,
					"fail": 0
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Liveness check returns 200 OK": {
					"pass": 1,
					"fail": 0
				},
				"Liveness response is an object": {
					"pass": 1,
					"fail": 0
				},
				"Liveness check indicates application is alive": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": true,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Liveness check returns 200 OK": true,
					"Liveness response is an object": true,
					"Liveness check indicates application is alive": true
				}
			]
		},
		{
			"id": "f82efd22-67b7-43b6-9876-ad87b3be3f20",
			"name": "Submit Friend Code - Valid Complete Data",
			"url": "http://localhost:8080/api/friend-codes",
			"time": 42,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": true,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Friend code created successfully with 201 status": true,
				"Response contains all required fields": true,
				"Friend code matches submitted value": true,
				"Trainer name matches submitted value": true,
				"Player level matches submitted value": true,
				"Location matches submitted value": true,
				"Team matches submitted value": true,
				"Goals match submitted values": true,
				"Friend code is active by default": true,
				"Timestamps are valid ISO dates": true,
				"ID is a positive number": true
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 1,
					"fail": 0
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Friend code created successfully with 201 status": {
					"pass": 1,
					"fail": 0
				},
				"Response contains all required fields": {
					"pass": 1,
					"fail": 0
				},
				"Friend code matches submitted value": {
					"pass": 1,
					"fail": 0
				},
				"Trainer name matches submitted value": {
					"pass": 1,
					"fail": 0
				},
				"Player level matches submitted value": {
					"pass": 1,
					"fail": 0
				},
				"Location matches submitted value": {
					"pass": 1,
					"fail": 0
				},
				"Team matches submitted value": {
					"pass": 1,
					"fail": 0
				},
				"Goals match submitted values": {
					"pass": 1,
					"fail": 0
				},
				"Friend code is active by default": {
					"pass": 1,
					"fail": 0
				},
				"Timestamps are valid ISO dates": {
					"pass": 1,
					"fail": 0
				},
				"ID is a positive number": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				42
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": true,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Friend code created successfully with 201 status": true,
					"Response contains all required fields": true,
					"Friend code matches submitted value": true,
					"Trainer name matches submitted value": true,
					"Player level matches submitted value": true,
					"Location matches submitted value": true,
					"Team matches submitted value": true,
					"Goals match submitted values": true,
					"Friend code is active by default": true,
					"Timestamps are valid ISO dates": true,
					"ID is a positive number": true
				}
			]
		},
		{
			"id": "0ca2bfea-e9db-4034-9960-26314611105b",
			"name": "Submit Friend Code - Minimal Valid Data",
			"url": "http://localhost:8080/api/friend-codes",
			"time": 24,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": true,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Minimal friend code created successfully": true,
				"Response contains required fields": true,
				"Friend code matches submitted value": true,
				"Friend code is exactly 12 digits": true,
				"Optional fields are null or empty when not provided": false
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 1,
					"fail": 0
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Minimal friend code created successfully": {
					"pass": 1,
					"fail": 0
				},
				"Response contains required fields": {
					"pass": 1,
					"fail": 0
				},
				"Friend code matches submitted value": {
					"pass": 1,
					"fail": 0
				},
				"Friend code is exactly 12 digits": {
					"pass": 1,
					"fail": 0
				},
				"Optional fields are null or empty when not provided": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				24
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": true,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Minimal friend code created successfully": true,
					"Response contains required fields": true,
					"Friend code matches submitted value": true,
					"Friend code is exactly 12 digits": true,
					"Optional fields are null or empty when not provided": false
				}
			]
		},
		{
			"id": "e6eb5a9a-823c-4990-85b7-2aaa6e105a85",
			"name": "Submit Friend Code - Different Format (With Spaces)",
			"url": "http://localhost:8080/api/friend-codes",
			"time": 22,
			"responseCode": {
				"code": 500,
				"name": "Internal Server Error"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": false,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Error response has standard format": true,
				"Friend code with spaces accepted": false,
				"Friend code stored correctly regardless of format": false
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 0,
					"fail": 1
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Error response has standard format": {
					"pass": 1,
					"fail": 0
				},
				"Friend code with spaces accepted": {
					"pass": 0,
					"fail": 1
				},
				"Friend code stored correctly regardless of format": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				22
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": false,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Error response has standard format": true,
					"Friend code with spaces accepted": false,
					"Friend code stored correctly regardless of format": false
				}
			]
		},
		{
			"id": "d77b2ca4-9dea-49e4-ba7c-7ff42de74fff",
			"name": "Submit Friend Code - Different Format (With Dashes)",
			"url": "http://localhost:8080/api/friend-codes",
			"time": 21,
			"responseCode": {
				"code": 500,
				"name": "Internal Server Error"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": false,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Error response has standard format": true,
				"Friend code with dashes accepted": false,
				"Friend code stored correctly regardless of format": false
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 0,
					"fail": 1
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Error response has standard format": {
					"pass": 1,
					"fail": 0
				},
				"Friend code with dashes accepted": {
					"pass": 0,
					"fail": 1
				},
				"Friend code stored correctly regardless of format": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				21
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": false,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Error response has standard format": true,
					"Friend code with dashes accepted": false,
					"Friend code stored correctly regardless of format": false
				}
			]
		},
		{
			"id": "6589f468-a993-4707-97a8-405ea5d3239c",
			"name": "Submit Friend Code - Missing Friend Code",
			"url": "http://localhost:8080/api/friend-codes",
			"time": 14,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": true,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Error response has standard format": true,
				"Returns 400 for missing friend code": true,
				"Error response contains required fields": true,
				"Error message indicates friend code is required": false
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 1,
					"fail": 0
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Error response has standard format": {
					"pass": 1,
					"fail": 0
				},
				"Returns 400 for missing friend code": {
					"pass": 1,
					"fail": 0
				},
				"Error response contains required fields": {
					"pass": 1,
					"fail": 0
				},
				"Error message indicates friend code is required": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				14
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": true,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Error response has standard format": true,
					"Returns 400 for missing friend code": true,
					"Error response contains required fields": true,
					"Error message indicates friend code is required": false
				}
			]
		},
		{
			"id": "b0763a6e-ce0b-4b28-bb27-f341221571fc",
			"name": "Submit Friend Code - Empty Friend Code",
			"url": "http://localhost:8080/api/friend-codes",
			"time": 11,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": true,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Error response has standard format": true,
				"Returns 400 for empty friend code": true,
				"Error indicates validation failure": true
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 1,
					"fail": 0
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Error response has standard format": {
					"pass": 1,
					"fail": 0
				},
				"Returns 400 for empty friend code": {
					"pass": 1,
					"fail": 0
				},
				"Error indicates validation failure": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": true,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Error response has standard format": true,
					"Returns 400 for empty friend code": true,
					"Error indicates validation failure": true
				}
			]
		},
		{
			"id": "902afe71-ab7e-48f7-af38-17417a20c212",
			"name": "Submit Friend Code - Invalid Format (Too Short)",
			"url": "http://localhost:8080/api/friend-codes",
			"time": 11,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": true,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Error response has standard format": true,
				"Returns 400 for short friend code": true,
				"Error message indicates friend code format validation": true
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 1,
					"fail": 0
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Error response has standard format": {
					"pass": 1,
					"fail": 0
				},
				"Returns 400 for short friend code": {
					"pass": 1,
					"fail": 0
				},
				"Error message indicates friend code format validation": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": true,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Error response has standard format": true,
					"Returns 400 for short friend code": true,
					"Error message indicates friend code format validation": true
				}
			]
		},
		{
			"id": "bfc0e94d-c502-4ed4-9fb3-32242268d941",
			"name": "Submit Friend Code - Invalid Format (Too Long)",
			"url": "http://localhost:8080/api/friend-codes",
			"time": 23,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": true,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Error response has standard format": true,
				"Returns 400 for long friend code": true,
				"Error message indicates friend code format validation": true
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 1,
					"fail": 0
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Error response has standard format": {
					"pass": 1,
					"fail": 0
				},
				"Returns 400 for long friend code": {
					"pass": 1,
					"fail": 0
				},
				"Error message indicates friend code format validation": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				23
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": true,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Error response has standard format": true,
					"Returns 400 for long friend code": true,
					"Error message indicates friend code format validation": true
				}
			]
		},
		{
			"id": "c5adb970-60cf-471a-8dec-cec74628b4d8",
			"name": "Submit Friend Code - Invalid Format (Contains Letters)",
			"url": "http://localhost:8080/api/friend-codes",
			"time": 13,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": true,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Error response has standard format": true,
				"Returns 400 for non-numeric friend code": true,
				"Error response indicates validation failure": true
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 1,
					"fail": 0
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Error response has standard format": {
					"pass": 1,
					"fail": 0
				},
				"Returns 400 for non-numeric friend code": {
					"pass": 1,
					"fail": 0
				},
				"Error response indicates validation failure": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				13
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": true,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Error response has standard format": true,
					"Returns 400 for non-numeric friend code": true,
					"Error response indicates validation failure": true
				}
			]
		},
		{
			"id": "df0611a6-7a01-4c22-b028-b59f71781b00",
			"name": "Submit Friend Code - Invalid Player Level (Too High)",
			"url": "http://localhost:8080/api/friend-codes",
			"time": 13,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": true,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Error response has standard format": true,
				"Returns 400 for player level above 50": true,
				"Error indicates validation failure": true
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 1,
					"fail": 0
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Error response has standard format": {
					"pass": 1,
					"fail": 0
				},
				"Returns 400 for player level above 50": {
					"pass": 1,
					"fail": 0
				},
				"Error indicates validation failure": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				13
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": true,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Error response has standard format": true,
					"Returns 400 for player level above 50": true,
					"Error indicates validation failure": true
				}
			]
		},
		{
			"id": "f1c3f441-5ef6-4ec8-aaec-9c13a0fb8600",
			"name": "Submit Friend Code - Invalid Player Level (Too Low)",
			"url": "http://localhost:8080/api/friend-codes",
			"time": 10,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": true,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Error response has standard format": true,
				"Returns 400 for player level below 1": true,
				"Error indicates validation failure": true
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 1,
					"fail": 0
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Error response has standard format": {
					"pass": 1,
					"fail": 0
				},
				"Returns 400 for player level below 1": {
					"pass": 1,
					"fail": 0
				},
				"Error indicates validation failure": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": true,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Error response has standard format": true,
					"Returns 400 for player level below 1": true,
					"Error indicates validation failure": true
				}
			]
		},
		{
			"id": "0d5c5ae9-868d-4fbb-bf16-02369c6ad9dd",
			"name": "Submit Friend Code - Invalid Team",
			"url": "http://localhost:8080/api/friend-codes",
			"time": 10,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": true,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Error response has standard format": true,
				"Returns 400 for invalid team": true,
				"Error indicates validation failure": true
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 1,
					"fail": 0
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Error response has standard format": {
					"pass": 1,
					"fail": 0
				},
				"Returns 400 for invalid team": {
					"pass": 1,
					"fail": 0
				},
				"Error indicates validation failure": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": true,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Error response has standard format": true,
					"Returns 400 for invalid team": true,
					"Error indicates validation failure": true
				}
			]
		},
		{
			"id": "d29feefa-5588-48da-970a-a1c451f09bdc",
			"name": "Submit Friend Code - Invalid Goals",
			"url": "http://localhost:8080/api/friend-codes",
			"time": 17,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": true,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Error response has standard format": true,
				"Returns 400 for invalid goals": true,
				"Error indicates validation failure": true
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 1,
					"fail": 0
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Error response has standard format": {
					"pass": 1,
					"fail": 0
				},
				"Returns 400 for invalid goals": {
					"pass": 1,
					"fail": 0
				},
				"Error indicates validation failure": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				17
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": true,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Error response has standard format": true,
					"Returns 400 for invalid goals": true,
					"Error indicates validation failure": true
				}
			]
		},
		{
			"id": "2642dc26-80d1-482d-b469-32ba3a816104",
			"name": "Submit Friend Code - Trainer Name Too Long",
			"url": "http://localhost:8080/api/friend-codes",
			"time": 47,
			"responseCode": {
				"code": 409,
				"name": "Conflict"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": true,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Error response has standard format": true,
				"Returns 400 for trainer name too long": false,
				"Error indicates validation failure": false
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 1,
					"fail": 0
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Error response has standard format": {
					"pass": 1,
					"fail": 0
				},
				"Returns 400 for trainer name too long": {
					"pass": 0,
					"fail": 1
				},
				"Error indicates validation failure": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				47
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": true,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Error response has standard format": true,
					"Returns 400 for trainer name too long": false,
					"Error indicates validation failure": false
				}
			]
		},
		{
			"id": "0c25c809-d029-49bf-b35a-171b3694a6f6",
			"name": "Submit Friend Code - Trainer Name Too Short",
			"url": "http://localhost:8080/api/friend-codes",
			"time": 13,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": true,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Error response has standard format": true,
				"Returns 400 for trainer name too short": true,
				"Error indicates validation failure": true
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 1,
					"fail": 0
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Error response has standard format": {
					"pass": 1,
					"fail": 0
				},
				"Returns 400 for trainer name too short": {
					"pass": 1,
					"fail": 0
				},
				"Error indicates validation failure": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				13
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": true,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Error response has standard format": true,
					"Returns 400 for trainer name too short": true,
					"Error indicates validation failure": true
				}
			]
		},
		{
			"id": "b6b146a2-75c1-4884-a8a4-18fd012508aa",
			"name": "Submit Friend Code - Invalid JSON",
			"url": "http://localhost:8080/api/friend-codes",
			"time": 10,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": true,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Error response has standard format": true,
				"Returns 400 for invalid JSON": true,
				"Error indicates JSON parsing failure": true
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 1,
					"fail": 0
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Error response has standard format": {
					"pass": 1,
					"fail": 0
				},
				"Returns 400 for invalid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Error indicates JSON parsing failure": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": true,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Error response has standard format": true,
					"Returns 400 for invalid JSON": true,
					"Error indicates JSON parsing failure": true
				}
			]
		},
		{
			"id": "6ab08f8b-f69c-48c4-b62a-71e050758a34",
			"name": "Submit Friend Code - Duplicate",
			"url": "http://localhost:8080/api/friend-codes",
			"time": 52,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": true,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Returns 409 for duplicate friend code": false,
				"Error response indicates conflict": false,
				"Error message indicates duplicate": false
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 1,
					"fail": 0
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Returns 409 for duplicate friend code": {
					"pass": 0,
					"fail": 1
				},
				"Error response indicates conflict": {
					"pass": 0,
					"fail": 1
				},
				"Error message indicates duplicate": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				52
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": true,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Returns 409 for duplicate friend code": false,
					"Error response indicates conflict": false,
					"Error message indicates duplicate": false
				}
			]
		},
		{
			"id": "95d53b72-1a8c-49a9-b1b8-9b1e81f239d5",
			"name": "Get Friend Codes - Default Parameters",
			"url": "http://localhost:8080/api/friend-codes",
			"time": 38,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": true,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Successfully retrieves friend codes with 200 status": true,
				"Response has pagination structure": true,
				"Content is an array": true,
				"Page information is correct": true,
				"Friend code objects have required fields": true,
				"Only active friend codes are returned by default": true
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 1,
					"fail": 0
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Successfully retrieves friend codes with 200 status": {
					"pass": 1,
					"fail": 0
				},
				"Response has pagination structure": {
					"pass": 1,
					"fail": 0
				},
				"Content is an array": {
					"pass": 1,
					"fail": 0
				},
				"Page information is correct": {
					"pass": 1,
					"fail": 0
				},
				"Friend code objects have required fields": {
					"pass": 1,
					"fail": 0
				},
				"Only active friend codes are returned by default": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				38
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": true,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Successfully retrieves friend codes with 200 status": true,
					"Response has pagination structure": true,
					"Content is an array": true,
					"Page information is correct": true,
					"Friend code objects have required fields": true,
					"Only active friend codes are returned by default": true
				}
			]
		},
		{
			"id": "9108d669-99c7-42db-9f13-75e4318a7ae7",
			"name": "Get Friend Codes - Custom Pagination",
			"url": "http://localhost:8080/api/friend-codes?page=1&size=5",
			"time": 41,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": true,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Returns correct page number": true,
				"Returns correct page size": true,
				"Content array respects size limit": true
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 1,
					"fail": 0
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Returns correct page number": {
					"pass": 1,
					"fail": 0
				},
				"Returns correct page size": {
					"pass": 1,
					"fail": 0
				},
				"Content array respects size limit": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				41
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": true,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Returns correct page number": true,
					"Returns correct page size": true,
					"Content array respects size limit": true
				}
			]
		},
		{
			"id": "d6b9c002-66e8-4316-afec-3dd452c885a1",
			"name": "Get Friend Codes - Sorting by createdAt desc",
			"url": "http://localhost:8080/api/friend-codes?sortBy=createdAt&sortDir=desc",
			"time": 41,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": true,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Friend codes are sorted by creation date descending": true
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 1,
					"fail": 0
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Friend codes are sorted by creation date descending": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				41
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": true,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Friend codes are sorted by creation date descending": true
				}
			]
		},
		{
			"id": "39f748b4-17f5-4065-8cc2-b93fc4580e7c",
			"name": "Get Friend Codes - Filter by Location",
			"url": "http://localhost:8080/api/friend-codes?location=New York",
			"time": 17,
			"responseCode": {
				"code": 500,
				"name": "Internal Server Error"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": false,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Error response has standard format": true,
				"All returned friend codes match location filter": false
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 0,
					"fail": 1
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Error response has standard format": {
					"pass": 1,
					"fail": 0
				},
				"All returned friend codes match location filter": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				17
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": false,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Error response has standard format": true,
					"All returned friend codes match location filter": false
				}
			]
		},
		{
			"id": "3573f292-7491-4785-b80c-746e134eee8f",
			"name": "Get Friend Codes - Filter by Level Range",
			"url": "http://localhost:8080/api/friend-codes?minLevel=30&maxLevel=40",
			"time": 20,
			"responseCode": {
				"code": 500,
				"name": "Internal Server Error"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": false,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Error response has standard format": true,
				"All returned friend codes are within level range": false
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 0,
					"fail": 1
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Error response has standard format": {
					"pass": 1,
					"fail": 0
				},
				"All returned friend codes are within level range": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				20
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": false,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Error response has standard format": true,
					"All returned friend codes are within level range": false
				}
			]
		},
		{
			"id": "ee1e2545-af05-4b7b-b328-eae3a9ae3ebc",
			"name": "Get Friend Codes - Search Filter",
			"url": "http://localhost:8080/api/friend-codes?search=gift",
			"time": 23,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": true,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Search results contain the search term": true
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 1,
					"fail": 0
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Search results contain the search term": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				23
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": true,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Search results contain the search term": true
				}
			]
		},
		{
			"id": "9060b7ff-025b-466a-9772-06e5ccf32eeb",
			"name": "Get Friend Codes - Invalid Page Size (Too Large)",
			"url": "http://localhost:8080/api/friend-codes?size=1000",
			"time": 43,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": true,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Returns 400 for page size exceeding maximum": false,
				"Error message indicates invalid page size": false
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 1,
					"fail": 0
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Returns 400 for page size exceeding maximum": {
					"pass": 0,
					"fail": 1
				},
				"Error message indicates invalid page size": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				43
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": true,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Returns 400 for page size exceeding maximum": false,
					"Error message indicates invalid page size": false
				}
			]
		},
		{
			"id": "893b9465-5638-43b1-8cef-7820bb468235",
			"name": "Get Friend Codes - Invalid Parameters",
			"url": "http://localhost:8080/api/friend-codes?page=-1&minLevel=60",
			"time": 14,
			"responseCode": {
				"code": 500,
				"name": "Internal Server Error"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": false,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Error response has standard format": true,
				"Returns 400 for invalid parameters": false,
				"Error message indicates validation failure": true
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 0,
					"fail": 1
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Error response has standard format": {
					"pass": 1,
					"fail": 0
				},
				"Returns 400 for invalid parameters": {
					"pass": 0,
					"fail": 1
				},
				"Error message indicates validation failure": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				14
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": false,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Error response has standard format": true,
					"Returns 400 for invalid parameters": false,
					"Error message indicates validation failure": true
				}
			]
		},
		{
			"id": "e228223e-0cf9-48e3-a121-5d6a474dd4a5",
			"name": "Get Friend Code by ID - Valid",
			"url": "http://localhost:8080/api/friend-codes/18",
			"time": 15,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": true,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Successfully retrieves friend code by ID": true,
				"Response contains expected friend code fields": true,
				"Returned ID matches requested ID": true,
				"Friend code is in valid format": true
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 1,
					"fail": 0
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Successfully retrieves friend code by ID": {
					"pass": 1,
					"fail": 0
				},
				"Response contains expected friend code fields": {
					"pass": 1,
					"fail": 0
				},
				"Returned ID matches requested ID": {
					"pass": 1,
					"fail": 0
				},
				"Friend code is in valid format": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				15
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": true,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Successfully retrieves friend code by ID": true,
					"Response contains expected friend code fields": true,
					"Returned ID matches requested ID": true,
					"Friend code is in valid format": true
				}
			]
		},
		{
			"id": "6e6493af-abce-408b-9c45-03cbbac00610",
			"name": "Get Friend Code by ID - Not Found",
			"url": "http://localhost:8080/api/friend-codes/999999",
			"time": 12,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": true,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Error response has standard format": true,
				"Returns 404 for non-existent friend code": true,
				"Error response indicates not found": true,
				"Error message indicates friend code not found": true
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 1,
					"fail": 0
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Error response has standard format": {
					"pass": 1,
					"fail": 0
				},
				"Returns 404 for non-existent friend code": {
					"pass": 1,
					"fail": 0
				},
				"Error response indicates not found": {
					"pass": 1,
					"fail": 0
				},
				"Error message indicates friend code not found": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				12
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": true,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Error response has standard format": true,
					"Returns 404 for non-existent friend code": true,
					"Error response indicates not found": true,
					"Error message indicates friend code not found": true
				}
			]
		},
		{
			"id": "8740ca10-2535-47c1-8d0c-40b34cadb4a6",
			"name": "Update Friend Code - Valid",
			"url": "http://localhost:8080/api/friend-codes/18",
			"time": 24,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": true,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Friend code updated successfully": true,
				"Updated fields reflect new values": true,
				"updatedAt timestamp is newer than createdAt": true,
				"ID and friend code remain unchanged": true
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 1,
					"fail": 0
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Friend code updated successfully": {
					"pass": 1,
					"fail": 0
				},
				"Updated fields reflect new values": {
					"pass": 1,
					"fail": 0
				},
				"updatedAt timestamp is newer than createdAt": {
					"pass": 1,
					"fail": 0
				},
				"ID and friend code remain unchanged": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				24
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": true,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Friend code updated successfully": true,
					"Updated fields reflect new values": true,
					"updatedAt timestamp is newer than createdAt": true,
					"ID and friend code remain unchanged": true
				}
			]
		},
		{
			"id": "983167b3-e6b5-4466-8f32-e615f56347ee",
			"name": "Update Friend Code - Partial Update",
			"url": "http://localhost:8080/api/friend-codes/18",
			"time": 27,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": true,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Partial update successful": true,
				"Only specified fields are updated": true
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 1,
					"fail": 0
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Partial update successful": {
					"pass": 1,
					"fail": 0
				},
				"Only specified fields are updated": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				27
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": true,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Partial update successful": true,
					"Only specified fields are updated": true
				}
			]
		},
		{
			"id": "41a13271-7329-4be5-a99a-3612a23abd96",
			"name": "Update Friend Code - Not Found",
			"url": "http://localhost:8080/api/friend-codes/999999",
			"time": 17,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": true,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Error response has standard format": true,
				"Returns 404 for updating non-existent friend code": true,
				"Error indicates friend code not found": true
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 1,
					"fail": 0
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Error response has standard format": {
					"pass": 1,
					"fail": 0
				},
				"Returns 404 for updating non-existent friend code": {
					"pass": 1,
					"fail": 0
				},
				"Error indicates friend code not found": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				17
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": true,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Error response has standard format": true,
					"Returns 404 for updating non-existent friend code": true,
					"Error indicates friend code not found": true
				}
			]
		},
		{
			"id": "665f595c-a325-42c1-9561-3d8b14fc90c6",
			"name": "Update Friend Code - Invalid Data",
			"url": "http://localhost:8080/api/friend-codes/18",
			"time": 10,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": true,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Error response has standard format": true,
				"Returns 400 for invalid update data": true,
				"Error indicates validation failure": true
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 1,
					"fail": 0
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Error response has standard format": {
					"pass": 1,
					"fail": 0
				},
				"Returns 400 for invalid update data": {
					"pass": 1,
					"fail": 0
				},
				"Error indicates validation failure": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": true,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Error response has standard format": true,
					"Returns 400 for invalid update data": true,
					"Error indicates validation failure": true
				}
			]
		},
		{
			"id": "176d15a4-d401-4581-a8c7-bbed90945a4d",
			"name": "Delete Friend Code - Valid",
			"url": "http://localhost:8080/api/friend-codes/18",
			"time": 28,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": true,
				"Friend code deactivated successfully": false,
				"Response indicates successful operation": false
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 1,
					"fail": 0
				},
				"Friend code deactivated successfully": {
					"pass": 0,
					"fail": 1
				},
				"Response indicates successful operation": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				28
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": true,
					"Friend code deactivated successfully": false,
					"Response indicates successful operation": false
				}
			]
		},
		{
			"id": "adc6ba78-9f2f-48ff-8e63-9f7b68c2817b",
			"name": "Delete Friend Code - Not Found",
			"url": "http://localhost:8080/api/friend-codes/999999",
			"time": 12,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": true,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Error response has standard format": true,
				"Returns 404 for deleting non-existent friend code": true,
				"Error indicates friend code not found": true
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 1,
					"fail": 0
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Error response has standard format": {
					"pass": 1,
					"fail": 0
				},
				"Returns 404 for deleting non-existent friend code": {
					"pass": 1,
					"fail": 0
				},
				"Error indicates friend code not found": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				12
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": true,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Error response has standard format": true,
					"Returns 404 for deleting non-existent friend code": true,
					"Error indicates friend code not found": true
				}
			]
		},
		{
			"id": "b86e659e-3522-467d-a867-ca0c69a8b318",
			"name": "Verify Deletion - Friend Code Should Be Inactive",
			"url": "http://localhost:8080/api/friend-codes/18",
			"time": 10,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": true,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Friend code still exists but is inactive": true
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 1,
					"fail": 0
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Friend code still exists but is inactive": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": true,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Friend code still exists but is inactive": true
				}
			]
		},
		{
			"id": "f219c757-f305-4ea0-aa55-5e4a3a17e127",
			"name": "Search Friend Codes - By Trainer Name",
			"url": "http://localhost:8080/api/friend-codes/search?trainerName=test",
			"time": 20,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": true,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Search returns results successfully": true,
				"Response has pagination structure": true,
				"Search results match trainer name criteria": true
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 1,
					"fail": 0
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Search returns results successfully": {
					"pass": 1,
					"fail": 0
				},
				"Response has pagination structure": {
					"pass": 1,
					"fail": 0
				},
				"Search results match trainer name criteria": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				20
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": true,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Search returns results successfully": true,
					"Response has pagination structure": true,
					"Search results match trainer name criteria": true
				}
			]
		},
		{
			"id": "5a27f4b7-6733-483b-9748-876d0ad624bf",
			"name": "Search Friend Codes - Multiple Criteria",
			"url": "http://localhost:8080/api/friend-codes/search?minLevel=35&maxLevel=50",
			"time": 27,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": true,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Multi-criteria search works correctly": true,
				"Search results match criteria": true
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 1,
					"fail": 0
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Multi-criteria search works correctly": {
					"pass": 1,
					"fail": 0
				},
				"Search results match criteria": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				27
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": true,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Multi-criteria search works correctly": true,
					"Search results match criteria": true
				}
			]
		},
		{
			"id": "3b574bab-bf1a-4e27-bfb6-8f859bb02026",
			"name": "Get Recent Friend Codes - Default (24 hours)",
			"url": "http://localhost:8080/api/friend-codes/recent",
			"time": 33,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": true,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Recent friend codes retrieved successfully": true,
				"Response has pagination structure": true
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 1,
					"fail": 0
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Recent friend codes retrieved successfully": {
					"pass": 1,
					"fail": 0
				},
				"Response has pagination structure": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				33
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": true,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Recent friend codes retrieved successfully": true,
					"Response has pagination structure": true
				}
			]
		},
		{
			"id": "8ed984af-e27a-4465-bafa-40ff136884b8",
			"name": "Get Recent Friend Codes - Custom Time Range",
			"url": "http://localhost:8080/api/friend-codes/recent?hours=12",
			"time": 42,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": true,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Custom time range parameter accepted": true,
				"Response structure is correct": true
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 1,
					"fail": 0
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Custom time range parameter accepted": {
					"pass": 1,
					"fail": 0
				},
				"Response structure is correct": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				42
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": true,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Custom time range parameter accepted": true,
					"Response structure is correct": true
				}
			]
		},
		{
			"id": "152039d5-f55e-40f3-be20-7307b2d1118f",
			"name": "Get Friend Code Statistics",
			"url": "http://localhost:8080/api/friend-codes/stats",
			"time": 11,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": true,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Statistics retrieved successfully": true,
				"Statistics response is an object": true,
				"Statistics contain numeric values": true
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 1,
					"fail": 0
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Statistics retrieved successfully": {
					"pass": 1,
					"fail": 0
				},
				"Statistics response is an object": {
					"pass": 1,
					"fail": 0
				},
				"Statistics contain numeric values": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": true,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Statistics retrieved successfully": true,
					"Statistics response is an object": true,
					"Statistics contain numeric values": true
				}
			]
		},
		{
			"id": "fc3895dd-882c-4507-96e2-b9f6f6eb6753",
			"name": "Large Page Size Request",
			"url": "http://localhost:8080/api/friend-codes?size=100",
			"time": 25,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": true,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Large page size handled efficiently": true,
				"Response time acceptable for large requests": true,
				"Large response structure is correct": true
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 1,
					"fail": 0
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Large page size handled efficiently": {
					"pass": 1,
					"fail": 0
				},
				"Response time acceptable for large requests": {
					"pass": 1,
					"fail": 0
				},
				"Large response structure is correct": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				25
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": true,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Large page size handled efficiently": true,
					"Response time acceptable for large requests": true,
					"Large response structure is correct": true
				}
			]
		},
		{
			"id": "afaae0f9-618a-443d-bf5e-32e456abf8e3",
			"name": "SQL Injection Prevention Test",
			"url": "http://localhost:8080/api/friend-codes/search?trainerName=' OR '1'='1",
			"time": 19,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": true,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"SQL injection attempt handled safely": true,
				"No sensitive data leaked in response": true
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 1,
					"fail": 0
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"SQL injection attempt handled safely": {
					"pass": 1,
					"fail": 0
				},
				"No sensitive data leaked in response": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				19
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": true,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"SQL injection attempt handled safely": true,
					"No sensitive data leaked in response": true
				}
			]
		},
		{
			"id": "b672f4fb-b40e-4dc2-9478-1d1bb95e8031",
			"name": "Invalid Content-Type Test",
			"url": "http://localhost:8080/api/friend-codes",
			"time": 9,
			"responseCode": {
				"code": 500,
				"name": "Internal Server Error"
			},
			"tests": {
				"Response time is acceptable (< 5s)": true,
				"No server errors (5xx)": false,
				"Content-Type is application/json": true,
				"Response is valid JSON": true,
				"Error response has standard format": true,
				"Invalid content-type handled appropriately": false,
				"Error response is well-formed": true
			},
			"testPassFailCounts": {
				"Response time is acceptable (< 5s)": {
					"pass": 1,
					"fail": 0
				},
				"No server errors (5xx)": {
					"pass": 0,
					"fail": 1
				},
				"Content-Type is application/json": {
					"pass": 1,
					"fail": 0
				},
				"Response is valid JSON": {
					"pass": 1,
					"fail": 0
				},
				"Error response has standard format": {
					"pass": 1,
					"fail": 0
				},
				"Invalid content-type handled appropriately": {
					"pass": 0,
					"fail": 1
				},
				"Error response is well-formed": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Response time is acceptable (< 5s)": true,
					"No server errors (5xx)": false,
					"Content-Type is application/json": true,
					"Response is valid JSON": true,
					"Error response has standard format": true,
					"Invalid content-type handled appropriately": false,
					"Error response is well-formed": true
				}
			]
		}
	],
	"count": 1,
	"totalTime": 1077,
	"collection": {
		"requests": [
			{
				"id": "d3927c07-d7a4-4f69-bafa-88f946cd8af1",
				"method": "GET"
			},
			{
				"id": "86b234ff-6333-42da-a7aa-494486d41e69",
				"method": "GET"
			},
			{
				"id": "a47fbf7a-787a-4462-8496-bc0d687f3a54",
				"method": "GET"
			},
			{
				"id": "f82efd22-67b7-43b6-9876-ad87b3be3f20",
				"method": "POST"
			},
			{
				"id": "0ca2bfea-e9db-4034-9960-26314611105b",
				"method": "POST"
			},
			{
				"id": "e6eb5a9a-823c-4990-85b7-2aaa6e105a85",
				"method": "POST"
			},
			{
				"id": "d77b2ca4-9dea-49e4-ba7c-7ff42de74fff",
				"method": "POST"
			},
			{
				"id": "6589f468-a993-4707-97a8-405ea5d3239c",
				"method": "POST"
			},
			{
				"id": "b0763a6e-ce0b-4b28-bb27-f341221571fc",
				"method": "POST"
			},
			{
				"id": "902afe71-ab7e-48f7-af38-17417a20c212",
				"method": "POST"
			},
			{
				"id": "bfc0e94d-c502-4ed4-9fb3-32242268d941",
				"method": "POST"
			},
			{
				"id": "c5adb970-60cf-471a-8dec-cec74628b4d8",
				"method": "POST"
			},
			{
				"id": "df0611a6-7a01-4c22-b028-b59f71781b00",
				"method": "POST"
			},
			{
				"id": "f1c3f441-5ef6-4ec8-aaec-9c13a0fb8600",
				"method": "POST"
			},
			{
				"id": "0d5c5ae9-868d-4fbb-bf16-02369c6ad9dd",
				"method": "POST"
			},
			{
				"id": "d29feefa-5588-48da-970a-a1c451f09bdc",
				"method": "POST"
			},
			{
				"id": "2642dc26-80d1-482d-b469-32ba3a816104",
				"method": "POST"
			},
			{
				"id": "0c25c809-d029-49bf-b35a-171b3694a6f6",
				"method": "POST"
			},
			{
				"id": "b6b146a2-75c1-4884-a8a4-18fd012508aa",
				"method": "POST"
			},
			{
				"id": "6ab08f8b-f69c-48c4-b62a-71e050758a34",
				"method": "POST"
			},
			{
				"id": "95d53b72-1a8c-49a9-b1b8-9b1e81f239d5",
				"method": "GET"
			},
			{
				"id": "9108d669-99c7-42db-9f13-75e4318a7ae7",
				"method": "GET"
			},
			{
				"id": "d6b9c002-66e8-4316-afec-3dd452c885a1",
				"method": "GET"
			},
			{
				"id": "39f748b4-17f5-4065-8cc2-b93fc4580e7c",
				"method": "GET"
			},
			{
				"id": "3573f292-7491-4785-b80c-746e134eee8f",
				"method": "GET"
			},
			{
				"id": "ee1e2545-af05-4b7b-b328-eae3a9ae3ebc",
				"method": "GET"
			},
			{
				"id": "9060b7ff-025b-466a-9772-06e5ccf32eeb",
				"method": "GET"
			},
			{
				"id": "893b9465-5638-43b1-8cef-7820bb468235",
				"method": "GET"
			},
			{
				"id": "e228223e-0cf9-48e3-a121-5d6a474dd4a5",
				"method": "GET"
			},
			{
				"id": "6e6493af-abce-408b-9c45-03cbbac00610",
				"method": "GET"
			},
			{
				"id": "8740ca10-2535-47c1-8d0c-40b34cadb4a6",
				"method": "PUT"
			},
			{
				"id": "983167b3-e6b5-4466-8f32-e615f56347ee",
				"method": "PUT"
			},
			{
				"id": "41a13271-7329-4be5-a99a-3612a23abd96",
				"method": "PUT"
			},
			{
				"id": "665f595c-a325-42c1-9561-3d8b14fc90c6",
				"method": "PUT"
			},
			{
				"id": "176d15a4-d401-4581-a8c7-bbed90945a4d",
				"method": "DELETE"
			},
			{
				"id": "adc6ba78-9f2f-48ff-8e63-9f7b68c2817b",
				"method": "DELETE"
			},
			{
				"id": "b86e659e-3522-467d-a867-ca0c69a8b318",
				"method": "GET"
			},
			{
				"id": "f219c757-f305-4ea0-aa55-5e4a3a17e127",
				"method": "GET"
			},
			{
				"id": "5a27f4b7-6733-483b-9748-876d0ad624bf",
				"method": "GET"
			},
			{
				"id": "3b574bab-bf1a-4e27-bfb6-8f859bb02026",
				"method": "GET"
			},
			{
				"id": "8ed984af-e27a-4465-bafa-40ff136884b8",
				"method": "GET"
			},
			{
				"id": "152039d5-f55e-40f3-be20-7307b2d1118f",
				"method": "GET"
			},
			{
				"id": "fc3895dd-882c-4507-96e2-b9f6f6eb6753",
				"method": "GET"
			},
			{
				"id": "afaae0f9-618a-443d-bf5e-32e456abf8e3",
				"method": "GET"
			},
			{
				"id": "b672f4fb-b40e-4dc2-9478-1d1bb95e8031",
				"method": "POST"
			}
		]
	}
}